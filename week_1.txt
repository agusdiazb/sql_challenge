
-- 1. What is the total amount each customer spent at the restaurant?

SELECT 
  SUM(m.price) as total_spent,
  s.customer_id
FROM menu as m 
JOIN sales as s ON (m.product_id = s.product_id)
GROUP BY s.customer_id
ORDER BY s.customer_id;

-- 2. How many days has each customer visited the restaurant?


SELECT
	customer_id,
  COUNT(DISTINCT(extract(day FROM order_date))) as days_of_visit
FROM sales
GROUP BY customer_id
ORDER BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?

SELECT m.product_name, s.customer_id
FROM sales s
JOIN menu m
ON s.product_id = m.product_id
WHERE order_date =  (select MIN(order_date) from sales )
GROUP BY  s.customer_id, m.product_name
ORDER BY s.customer_id;


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT
	product_name,
  COUNT(*) as total_purchased
FROM sales as s
LEFT JOIN menu as m
ON s.product_id = m.product_id
GROUP BY product_name
LIMIT 1;

-- 5. Which item was the most popular for each customer?

WITH tmp AS (
SELECT
  m.product_name,
  s.customer_id,
  COUNT(*) AS total_purchased
FROM sales s
JOIN menu m
ON s.product_id = m.product_id
GROUP BY  m.product_name,s.customer_id
),

ranking as (
SELECT
  product_name,
  customer_id,
  total_purchased,
  DENSE_RANK() OVER( PARTITION BY customer_id ORDER BY total_purchased desc) as ranking_product

FROM tmp
)

SELECT product_name, customer_id, total_purchased
FROM ranking
where ranking_product = 1;


-- 6. Which item was purchased first by the customer after they became a member?

WITH tmp as(
SELECT
  m.product_name,
  s.customer_id,
  b.join_date,
  s.order_date,
  DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date ASC ) as ranking
FROM sales s
JOIN menu m 
ON s.product_id = m.product_id
JOIN members b
ON s.customer_id = b.customer_id
WHERE s.order_date >= b.join_date
) 

SELECT product_name, customer_id, join_date, order_date
FROM tmp
where ranking = 1 ;


-- 7. Which item was purchased just before the customer became a member?

WITH tmp as(
SELECT
  m.product_name,
  s.customer_id,
  b.join_date,
  s.order_date,
  DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date ASC ) as ranking
FROM sales s
JOIN menu m 
ON s.product_id = m.product_id
JOIN members b
ON s.customer_id = b.customer_id
WHERE s.order_date < b.join_date
) 

SELECT product_name, customer_id, join_date, order_date
FROM tmp
where ranking = 1 ;


-- 8. What is the total items and amount spent for each member before they became a member?

SELECT
  s.customer_id,
  COUNT(m.product_id) as total_purchased,
  sum(m.price) as total_spent
FROM sales s
JOIN menu m 
ON s.product_id = m.product_id
JOIN members b
ON s.customer_id = b.customer_id
WHERE s.order_date < b.join_date
GROUP BY customer_id
ORDER BY customer_id;



-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH tmp as (
SELECT
  s.customer_id,
  SUM(CASE WHEN m.product_name = 'sushi' THEN m.price*20 ELSE 0 END) as total_sushi_points,
  SUM(CASE WHEN m.product_name <> 'sushi' THEN m.price*10 ELSE 0 END) as total_other_points,
FROM sales s
JOIN menu m 
ON s.product_id = m.product_id
JOIN members b
ON s.customer_id = b.customer_id
WHERE s.order_date >= b.join_date
GROUP BY customer_id
)

SELECT
  customer_id,
  (total_sushi_points + total_other_points) AS total_points
FROM tmp
ORDER BY customer_id;
